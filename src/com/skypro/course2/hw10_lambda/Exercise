Задание 1
Напишите реализации функционального интерфейса Predicate, которые проверяют, является ли число положительным.
Если число положительное, то предикат должен возвращать true, в противном случае — false.
    Реализуйте Predicate в двух вариантах:
        * через анонимный класс,
        * через лямбду.

Задание 2
Создайте функциональный интерфейс Consumer, который принимает на вход имя человека и выводит
в консоль приветствие в его адрес.
    Реализуйте его в двух вариантах:
        * через анонимный класс,
        * через лямбду.

Задание 3
Реализуйте функциональный интерфейс Function, который принимает на вход вещественное число типа Double,
а возвращает его округленный вариант типа Long.
    Реализуйте его в двух вариантах:
        * через анонимный класс,
        * через лямбду.

Задание 4
Напишите Supplier, который возвращает случайное число из диапазона от 0 до 100.
    Реализуйте его в двух вариантах:
        * через анонимный класс,
        * через лямбду.

Задание 5 (опциональное)
Теперь попрактикуемся в комбинировании нескольких функций в одну сложную конструкцию. Для примера построим
следующую комбинацию.
Дан предикат condition и две функции: ifTrue и ifFalse.
Напишите метод ternaryOperator, который из предиката и двух функций построит новую функцию, возвращающую значение
функции ifTrue, если предикат выполнен, а в остальных случаях — ifFalse.

        public static <T, U> Function<T, U> ternaryOperator(
           Predicate<? super T> condition,
           Function<? super T, ? extends U> ifTrue,
           Function<? super T, ? extends U> ifFalse) {
           ...
        }